---
- hosts: all
  become: true
  vars:
    app_dir: "{{user_dir}}/kubernetes-project"
    git_repo_url: "https://github.com/clamprou/devops-kubernetes.git"
    git_repo_branch: "master"
  tasks:
  
  - name: Install docker packages
    remote_user: chrisotelios
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg-agent
      - software-properties-common
    tags:
      - docker
  - name: Add Docker s official GPG key
    remote_user: chrisotelios
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    tags:
      - docker
  - name: Verify that we have the key with the fingerprint
    remote_user: chrisotelios
    apt_key:
      id: 0EBFCD88
      state: present
    tags:
      - docker
  - name: Set up the stable repository
    remote_user: chrisotelios
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
      update_cache: yes
    tags:
      - docker
  - name: Update apt packages
    remote_user: chrisotelios
    apt:
      update_cache: yes
    tags:
      - docker
  - name: Install docker
    remote_user: chrisotelios
    apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: present
      update_cache: yes
    #notify: Start docker on boot
    tags:
      - docker
      
  - name: install python dependencies
    become: true
    apt:
      update_cache: yes
      state: latest
      name: python3-pip

  - name: install 'Docker SDK for Python'
    pip:
      name: docker

  - name: Add remote "chrisotelios" user to "docker" group
    remote_user: chrisotelios
    user:
      name: "chrisotelios"
      group: "docker"
      append: yes
    tags:
      - docker
  - name: Install docker-compose
    remote_user: chrisotelios
    get_url: 
      url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'
  
  - name: install MicroK8s
    become: True
    become_user: root
    shell:
      cmd: "snap install microk8s --classic"

  - name: install Kubectl
    become: True
    become_user: root
    shell:
      cmd: "snap install kubectl --classic"

  - name: enable ingress
    become: True
    become_user: root
    shell:
      cmd: "microk8s.enable dashboard dns storage ingress"

  - name: access microk8s without sudo
    become: True
    become_user: root
    shell:  
      cmd: |
            sudo usermod -a -G microk8s $USER 
            sudo chown -f -R $USER ~/.kube
            newgrp microk8s

  - name: cli
    become: True
    become_user: root
    shell:
      cmd: "curl -sS https://webinstall.dev/k9s | bash"

  - name: setup config
    become: True
    become_user: root
    shell:
      cmd: "microk8s.kubectl config view --raw > $HOME/.kube/config"
      
  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"
    ignore_errors: true

  - name: clone kubernetes project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      force: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: apply kubctl yaml files
    become: True
    become_user: root
    shell:
      chdir: "{{app_dir}}"
      cmd: |
            kubectl apply -f app-deployment.yaml
            kubectl kubectl apply -f app-service.yaml
            kubectl kubectl apply -f app-ingress.yaml
