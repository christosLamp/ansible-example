---
- hosts: webserver

  vars:
    app_dir: "{{user_dir}}/docker-project"
    git_repo_url: "https://github.com/clamprou/devops-docker.git"
    git_repo_branch: "master"

  tasks:

  - name: print user_dir
    debug:
      msg: "user dir is {{user_dir}}"

  - name: Run whoami without become.
    command: whoami
    changed_when: false
    become: false
    register: whoami

  - name: Set a fact with the user name.
    set_fact:
      login_user: "{{ whoami.stdout }}"

  - name: print user dir
    debug:
      msg: "login user is {{user_dir}}"

  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"
    ignore_errors: true

  - name: clone django project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      force: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: copy env file
    shell : "cp {{app_dir}}/myproject/myproject/.env.example {{app_dir}}/myproject/myproject/.env"

  - name: populate  ~/.env
    lineinfile:
      dest: "{{app_dir}}/myproject/myproject/.env"
      state: present
      regexp: "^{{item.key}}="
      line: "{{item.key}}='{{item.value}}'"
    with_items:
      - "{{django.env | dict2items}}"



  - name: install and activate virtual environment
    block:
    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3
    rescue:
    - name: "APT - install misc packages"
      apt:
        name: [python3, python3-pip, python3-virtualenv, virtualenv]
        update_cache: yes
      become: yes
      become_user: root
      when: hostvars[inventory_hostname].ansible_distribution == 'Ubuntu'
    always:

    - name: setup virtual environment
      pip:
        requirements: "{{app_dir}}/requirements.txt"
        virtualenv: "{{app_dir}}/myvenv"
        virtualenv_python: python3

  # - name: create build directory
  #   file:
  #     path: /chrisotelios/demo-dockerfile
  #     state: directory
  #     owner: chrisotelios
  #     group: chrisotelios
  #     mode: '0755'
  #   become: yes

  # - name: copy Dockerfile
  #   copy:
  #     src: /home/chrisotelios/docker-project/Dockerfile
  #     dest: /chrisotelios/demo-dockerfile/Dockerfile
  #     owner: chrisotelios
  #     group: chrisotelios
  #     mode: '0644'
  #   become: yes
  #   become_user: root

  - name: build container image
    docker_image:
      name: democontainer:v1.0
      source: build
      build:
        path: /home/chrisotelios/docker-project
      state: present
    become: yes
    become_user: root

    - name: deploy Docker Compose stack
    community.docker.docker_compose:
      project_src: /home/chrisotelios/docker-project
      files:
      - docker-compose.yml